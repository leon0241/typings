class GameSettings{constructor(type,length,words){this._name="",this._length=length,this._type=type,this._words=words}get name(){return this._name}get length(){return this._length}get type(){return this._type}set length(value){this._length=value}set type(value){this._type=value}getCalculatedLength(){let output,part1=this._type.toString(),part2=this._length.toString(),switcher;switch(part1.concat(part2)){case"00":output=30;break;case"01":output=60;break;case"02":output=120;break;case"10":output=25;break;case"11":output=50;break;case"12":output=100}return output}setName(){let textbox,name=document.querySelector("#finishTypingField").value;""===name&&(name="Anon"),this._name=name}}class UserGame extends GameSettings{constructor(...args){super(...args),this._calculatedStats=[0,0],this._characters=0,this._gameWords=[],this._timeTaken=0,this._userWordCount=0,this._wordErrors=0}get characters(){return this._characters}get calculatedStats(){return this._calculatedStats}get gameWords(){return this._gameWords}get timeTaken(){return this._timeTaken}get userWordCount(){return this._userWordCount}get word(){return this._gameWords[this._userWordCount-1]}set calculatedStats(value){this._calculatedStats=value}set timeTaken(value){this._timeTaken=value}incrementCharacters(char){const options=[8,16,17,20,46];-1===options.indexOf(char)&&(this._characters+=1)}incrementWordCount(){this._userWordCount+=1}incrementWordErrors(){this._wordErrors+=1}editGameData(x,y){let type=parseInt(x,10),length=parseInt(y,10);this._type=type,this._length=length}initialiseArray(){let tempGameWords=[];for(let i=0;i<50;i++){let randint=Math.floor(Math.random()*words.length);tempGameWords[i]=this._words[randint]}this._gameWords=tempGameWords}wordCheck(){let inputWord=gameTypingField.value.trim(),wordComparison=this.word,nodeItem=document.getElementById("previousWord");inputWord===wordComparison?DOMFunctions.setAnswer(!0,nodeItem):(this.incrementWordErrors(),DOMFunctions.setAnswer(!1,nodeItem)),DOMFunctions.checkRow()}newWord(){let gameWords=this._gameWords,randint=Math.floor(Math.random()*words.length);gameWords.push(words[randint]),DOMFunctions.updateWords(this._gameWords,this._gameWords.length-1)}calculateStats(){let chars=this._characters,time=this._timeTaken,errors=this._wordErrors,totalWords=this._userWordCount,netWords=chars/5-errors,timeFactor=time/60,netWPM,accuracy,tempStats,stats=[];[netWords<0?(totalWords-errors)/timeFactor:netWords/timeFactor,(totalWords-errors)/totalWords*100].forEach(element=>stats.push(Math.round(element))),this._calculatedStats=stats}resetStats(){this._calculatedStats=[0,0],this._characters=0,this._gameWords=[""],this._timeTaken=0,this._userWordCount=0,this._wordErrors=0,DOMFunctions.position=0}}class GameFunctions extends UserGame{constructor(...args){super(...args)}startGame(){inGame=!0;let gameType=0===this._type?this.goToTimedGame():this.goToWordGame()}goToTimedGame(){DOMFunctions.changeGameProgress(this.getCalculatedLength()),this.timeTimer(()=>{this.finishGame()})}timeTimer(callback){let duration=this.getCalculatedLength(),time=1,gameTimer=setInterval(()=>{!1!==inGame?(time>=duration&&(clearInterval(gameTimer),this._timeTaken=duration,callback()),DOMFunctions.changeGameProgress(duration-time),time++):clearInterval(gameTimer)},1e3)}goToWordGame(){let gameLength=this.getCalculatedLength();DOMFunctions.changeGameProgress(gameLength),this.wordTimer(()=>{this.finishGame()})}wordTimer(callback){let totalWordCount=this.getCalculatedLength(),time=1,inGameSeconds=0,interval=100,gameTimer=setInterval(()=>{!1!==inGame?(this._userWordCount>=totalWordCount&&(clearInterval(gameTimer),this._timeTaken=time,callback()),inGameSeconds+=100,inGameSeconds%1e3==0&&time++):clearInterval(gameTimer)},100)}finishGame(){inGame=!1,this.calculateStats(),DOMFunctions.showFinish(),DOMFunctions.appendFormData()}goToNextWord(){DOMFunctions.updateNodeList(),this.incrementWordCount(),this.newWord(),DOMFunctions.incrementPosition(),DOMFunctions.highlightCurrentWord(),this.wordCheck(),gameTypingField.value="",1===this._type&&DOMFunctions.changeGameProgress(this.getCalculatedLength()-this._userWordCount)}}function newGame(that){let type=that.test_type.value,length="0"===type?that.time_length.value:that.word_length.value;""===type&&(type=defOpt[0].toString()),""===length&&(length=defOpt[1].toString()),Game.resetStats,inGame=!1,clicked=!1,gameTypingField.value="",Game.editGameData(type,length),DOMFunctions.setSettings(type,length),Game.initialiseArray(),DOMFunctions.showArray(Game.gameWords),DOMFunctions.changeGameProgress("")}function resetGame(){inGame=!1,clicked=!1,gameTypingField.value="",Game.resetStats(),Game.initialiseArray(),DOMFunctions.showArray(Game.gameWords),DOMFunctions.changeGameProgress("")}function finishedReset(exit){Game.setName(),DOMFunctions.hideFinish(),Scores.submitToLocalStorage(Game.name,Game.calculatedStats[0]),Scores.updateScoreboard(),resetGame(),!0===exit&&DOMFunctions.showStart()}gameTypingField.onclick=()=>{!1===inGame&&(clicked=!0)},gameTypingField.onkeydown=e=>{!0===clicked&&(Game.startGame(),clicked=!1),!0===inGame&&(Game.incrementCharacters(e.keyCode),32==e.keyCode&&Game.goToNextWord())};let inGame=!1,clicked=!1,defOpt=[0,1],Game=new GameFunctions(defOpt[0],defOpt[1],words),DOMFunctions=new DOMManipulation,Scores=new Scoreboard;window.onload=e=>{if(0===localStorage.length)DOMFunctions.setSettings(defOpt[0].toString(),defOpt[1].toString());else if(localStorage.length>0){let importSettings=DOMFunctions.getSettings();Game.editGameData(importSettings[0],importSettings[1]),setTheme(importSettings[2]),localStorage.length>3&&(Scores.initIndex(3),Scores.initScoreboard())}gameTypingField.value="",Game.initialiseArray(),DOMFunctions.showArray(Game.gameWords)};